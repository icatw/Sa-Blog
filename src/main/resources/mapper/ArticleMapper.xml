<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.icatw.blog.mapper.ArticleMapper">
    <resultMap type="cn.icatw.blog.domain.entity.Article" id="ArticleMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="userId" column="user_id" jdbcType="INTEGER"/>
        <result property="categoryId" column="category_id" jdbcType="INTEGER"/>
        <result property="articleCover" column="article_cover" jdbcType="VARCHAR"/>
        <result property="articleTitle" column="article_title" jdbcType="VARCHAR"/>
        <result property="articleContent" column="article_content" jdbcType="VARCHAR"/>
        <result property="type" column="type" jdbcType="INTEGER"/>
        <result property="originalUrl" column="original_url" jdbcType="VARCHAR"/>
        <result property="isTop" column="is_top" jdbcType="INTEGER"/>
        <result property="isDelete" column="is_delete" jdbcType="INTEGER"/>
        <result property="status" column="status" jdbcType="INTEGER"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
    </resultMap>
    <resultMap id="articleResultMap" type="cn.icatw.blog.domain.dto.ArticleDTO">
        <id column="id" property="id"/>
        <result column="article_cover" property="articleCover"/>
        <result column="article_title" property="articleTitle"/>
        <result column="article_content" property="articleContent"/>
        <result column="type" property="type"/>
        <result column="original_url" property="originalUrl"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
        <result column="category_id" property="categoryId"/>
        <result column="category_name" property="categoryName"/>
        <collection property="tagDTOList" ofType="cn.icatw.blog.domain.dto.TagDTO">
            <id column="tag_id" property="id"/>
            <result column="tag_name" property="tagName"/>
        </collection>
    </resultMap>
    <!-- 基本字段 -->
    <sql id="Base_Column_List">
        id,
        user_id,
        category_id,
        article_cover,
        article_title,
        article_content,
        type,
        original_url,
        is_top,
        is_delete,
        status,
        create_time,
        update_time,
    </sql>

    <select id="listArticleStatisticsDTO" resultType="cn.icatw.blog.domain.dto.ArticleStatisticsDTO">
        select DATE_FORMAT(create_time, '%Y-%m-%d') as date,
               count(id)                            as count
        from tb_article
        group by date
        ORDER BY date DESC
    </select>

    <resultMap id="ArticleBackListMap" type="cn.icatw.blog.domain.dto.ArticleBackDTO">
        <id column="id" property="id"/>
        <result column="article_cover" property="articleCover"/>
        <result column="article_title" property="articleTitle"/>
        <result column="create_time" property="createTime"/>
        <result column="type" property="type"/>
        <result column="is_top" property="isTop"/>
        <result column="is_delete" property="isDelete"/>
        <result column="status" property="status"/>
        <result column="category_name" property="categoryName"/>
        <collection property="tagDTOList" ofType="cn.icatw.blog.domain.dto.TagDTO" >
            <id column="tag_id" property="id"/>
            <result column="tag_name" property="tagName"/>
        </collection>
    </resultMap>
    <select id="listArticlesBySearch" resultMap="ArticleBackListMap" resultType="cn.icatw.blog.domain.dto.ArticleBackDTO">
        SELECT a.id,
               article_cover,
               article_title,
               type,
               is_top,
               a.is_delete,
               a.status,
               a.create_time,
               category_name,
               t.id AS tag_id,
               t.tag_name
        FROM
        (
        SELECT id,
               article_cover,
               article_title,
               type,
               is_top,
               is_delete,
               status,
               create_time,
               category_id
        FROM tb_article
        <where>
            is_delete = #{params.isDelete}
            <if test="params.keywords != null">
                and (article_title like concat('%', #{params.keywords}, '%')
                    or article_content like concat('%', #{params.keywords}, '%'))
            </if>
            <if test="params.status != null">
                and status = #{params.status}
            </if>
            <if test="params.categoryId != null">
                and category_id = #{params.categoryId}
            </if>
            <if test="params.type != null">
                and type = #{params.type}
            </if>
            <if test="params.tagId != null">
                and id in
                    (SELECT article_id
                     FROM tb_article_tag
                     WHERE tag_id = #{params.tagId})
            </if>
        </where>
        ORDER BY is_top DESC,
                 id DESC
        LIMIT #{current},#{size}
        ) a
            LEFT JOIN tb_category c ON a.category_id = c.id
            LEFT JOIN tb_article_tag atg ON a.id = atg.article_id
            LEFT JOIN tb_tag t ON t.id = atg.tag_id
        ORDER BY is_top DESC,
                 a.id DESC
    </select>

    <select id="numberOfValidArticles" resultType="Integer">
        SELECT count(DISTINCT a.id)
        from tb_article a
                 LEFT JOIN tb_article_tag tat on a.id = tat.article_id
        <where>
            is_delete = #{params.isDelete}
            <if test="params.keywords != null">
                and (article_title like concat('%', #{params.keywords}, '%')
                    or article_content like concat('%', #{params.keywords}, '%'))
            </if>
            <if test="params.status != null">
                and `status` = #{params.status}
            </if>
            <if test="params.categoryId != null">
                and category_id = #{params.categoryId}
            </if>
            <if test="params.type != null">
                and type = #{params.type}
            </if>
            <if test="params.tagId != null">
                and tat.tag_id = #{params.tagId}
            </if>
        </where>
    </select>

    <resultMap id="articleHomeResultMap" type="cn.icatw.blog.domain.dto.ArticleHomeDTO">
        <id column="id" property="id"/>
        <result column="article_cover" property="articleCover"/>
        <result column="article_title" property="articleTitle"/>
        <result column="article_content" property="articleContent"/>
        <result column="create_time" property="createTime"/>
        <result column="type" property="type"/>
        <result column="is_top" property="isTop"/>
        <result column="category_id" property="categoryId"/>
        <result column="category_name" property="categoryName"/>
        <collection property="tagDTOList" ofType="cn.icatw.blog.domain.dto.TagDTO">
            <id column="tag_id" property="id"/>
            <result column="tag_name" property="tagName"/>
        </collection>
    </resultMap>
    <select id="listArticles" resultMap="articleHomeResultMap">
        SELECT
            a.id,
            article_cover,
            article_title,
            SUBSTR( article_content, 1, 500 ) AS article_content,
            a.create_time,
            a.type,
            a.is_top,
            a.category_id,
            category_name,
            t.id AS tag_id,
            t.tag_name
        FROM
            (
                SELECT
                    id,
                    article_cover,
                    article_title,
                    article_content,
                    type,
                    is_top,
                    create_time,
                    category_id
                FROM
                    tb_article
                WHERE is_delete = 0
                  AND status = 1
                ORDER BY
                    is_top DESC,
                    id DESC
                LIMIT #{current} , #{size}
            ) a
                JOIN tb_category c ON a.category_id = c.id
                JOIN tb_article_tag atg ON a.id = atg.article_id
                JOIN tb_tag t ON t.id = atg.tag_id
        ORDER BY
            a.is_top DESC,
            a.id DESC
    </select>
    <resultMap id="articlePreviewResultMap" type="cn.icatw.blog.domain.dto.ArticlePreviewDTO">
        <id column="id" property="id"/>
        <result column="article_cover" property="articleCover"/>
        <result column="article_title" property="articleTitle"/>
        <result column="create_time" property="createTime"/>
        <result column="category_id" property="categoryId"/>
        <result column="category_name" property="categoryName"/>
        <collection property="tagDTOList" ofType="cn.icatw.blog.domain.dto.TagDTO">
            <id column="tag_id" property="id"/>
            <result column="tag_name" property="tagName"/>
        </collection>
    </resultMap>
    <select id="listArticlesByCondition" resultMap="articlePreviewResultMap">
        SELECT
        a.id,
        article_cover,
        article_title,
        a.create_time,
        a.category_id,
        category_name,
        t.id AS tag_id,
        t.tag_name
        FROM
        (
        SELECT
        id,
        article_cover,
        article_title,
        article_content,
        create_time,
        category_id
        FROM
        tb_article
        <where>
            <if test="condition.categoryId != null">
                category_id = #{condition.categoryId}
            </if>
            <if test="condition.tagId != null">
                id IN (
                SELECT
                article_id
                FROM
                tb_article_tag
                WHERE
                tag_id = #{condition.tagId})
            </if>
        </where>
        AND is_delete = 0
        AND status = 1
        ORDER BY id DESC
        LIMIT #{current},#{size}
        ) a
        JOIN tb_category c ON a.category_id = c.id
        JOIN tb_article_tag atg ON a.id = atg.article_id
        JOIN tb_tag t ON t.id = atg.tag_id
    </select>

    <select id="listRecommendArticles" resultType="cn.icatw.blog.domain.dto.ArticleRecommendDTO">
        SELECT
            id,
            article_title,
            article_cover,
            create_time
        FROM
            (
                SELECT DISTINCT
                    article_id
                FROM
                        ( SELECT tag_id FROM tb_article_tag WHERE article_id = #{articleId} ) t
                            JOIN tb_article_tag t1 ON t.tag_id = t1.tag_id
                WHERE
                    article_id != #{articleId}
            ) t2
                JOIN tb_article a ON t2.article_id = a.id
        WHERE a.is_delete = 0
        ORDER BY
            is_top DESC,id DESC
        LIMIT 6
    </select>

    <select id="getArticleById" resultMap="articleResultMap">
        SELECT
            a.id,
            article_cover,
            article_title,
            article_content,
            a.type,
            a.original_url,
            a.create_time,
            a.update_time,
            a.category_id,
            category_name,
            t.id AS tag_id,
            t.tag_name
        FROM
            tb_article a
                JOIN tb_category c ON a.category_id = c.id
                JOIN tb_article_tag atg ON a.id = atg.article_id
                JOIN tb_tag t ON t.id = atg.tag_id
        WHERE
            a.id = #{articleId}
          AND a.is_delete = 0
          AND a.status = 1
    </select>
</mapper>
